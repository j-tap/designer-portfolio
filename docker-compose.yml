services:
  traefik:
    image: traefik:v2.10
    environment:
      - TRAEFIK_EMAIL=${TRAEFIK_EMAIL}
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"

  #  postgres:
#    image: postgres:15
#    restart: unless-stopped
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#    environment:
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#    ports:
#      - "${DB_PORT}:${DB_PORT}"

  strapi:
    build:
      context: ./backend
    ports:
      - "${PORT_BACKEND}:${PORT_BACKEND}"
    command: "yarn develop"
    volumes:
      - ./backend/.tmp:/app/.tmp
      - ./backend/src:/app/src
      - ./backend/config:/app/config
      - ./backend/public:/app/public
      - ./backend/tmp:/tmp
      - ./backend/yarn-cache:/root/.yarn
#    depends_on:
#      - postgres

  nuxt:
    build:
      context: ./frontend
    ports:
      - "${PORT_FRONTEND}:${PORT_FRONTEND}"
    command: "yarn dev"
    volumes:
      - ./frontend/public:/app/public

volumes:
  pgdata:
